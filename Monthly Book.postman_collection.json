{
	"info": {
		"_postman_id": "b87ba7d5-a50e-49a1-8ded-572561217a1a",
		"name": "Monthly Book",
		"description": "Monthly Book Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Token Refreshed\"] = (responseCode.code == 200);",
									"",
									"if (responseCode.code == 200) {",
									"    try {",
									"        var token_response = JSON.parse(responseBody);",
									"        access_token = token_response.access;",
									"        refresh_token = token_response.refresh;",
									"    }",
									"    catch (e) {",
									"        console.log(e);",
									"    }",
									"",
									"    postman.setGlobalVariable(\"access_token\", access_token)",
									"    postman.setGlobalVariable(\"refresh_token\", refresh_token)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{username}}\",\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/umanage/login/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"umanage",
								"login",
								""
							]
						},
						"description": "Login request. Mandatory parameters are username and password."
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"token\": \"{{access_token}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/umanage/token/verify/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"umanage",
								"token",
								"verify",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Token Refreshed\"] = (responseCode.code == 200);",
									"",
									"if (responseCode.code == 200) {",
									"    try {",
									"        var token_response = JSON.parse(responseBody);",
									"        access_token = token_response.access",
									"    }",
									"    catch (e) {",
									"        console.log(e);",
									"    }",
									"",
									"    postman.setGlobalVariable(\"access_token\", access_token)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access\": \"{{access_token}}\",\n    \"refresh\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/umanage/token/refresh/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"umanage",
								"token",
								"refresh",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "This section of the collection deals with all the APIs related to the user management such as new user registration, user login, verifying user's token, refreshing user's token and user logout.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Core Functionality",
			"item": [
				{
					"name": "All API URLs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								""
							]
						},
						"description": "List all the available API urls. This is created by DefaultRouter in Django Rest Framework."
					},
					"response": []
				},
				{
					"name": "List All Stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/stores/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								""
							]
						},
						"description": "This API will list all the available stores created by the user. The API will also validate the access token provided in the authorization header and then provide the details related to the user who has requested the details."
					},
					"response": []
				},
				{
					"name": "Store Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/stores/19/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"19",
								""
							]
						},
						"description": "This API will provide the details of the store pointed by the ID in the URL and if it is created by the user who is requesting it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Create Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store_name\": \"Test\",\n    \"store_address\": \"https://amazon.ae/\",\n    \"store_type\": \"ONL\",\n    \"created_by\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/stores/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								""
							]
						},
						"description": "This API will create a new store and tag it to the user who is generated the request. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Update Store",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"store_name\": \"Amazon AE\",\n    \"store_address\": \"https://amazon.ae/\",\n    \"store_type\": \"ONL\",\n    \"created_by\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/stores/1/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"1",
								""
							]
						},
						"description": "This API will update the details of the store pointed by the ID in the URL and if it is created by the user who is trying to update it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/stores/18/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stores",
								"18",
								""
							]
						},
						"description": "This API will delete the store pointed by the ID in the URL and if it is created by the user who is trying to delete it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "List All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/products/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						},
						"description": "This API will list all the available products created by the user. The API will also validate the access token provided in the authorization header and then provide the details related to the user who has requested the details."
					},
					"response": []
				},
				{
					"name": "Product Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/products/101/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"101",
								""
							]
						},
						"description": "This API will provide the details of the product pointed by the ID in the URL and if it is created by the user who is requesting it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_name\": \"Potato Papad - Spicy\",\n    \"product_desc\": \"Orange Potato Papad\",\n    \"product_qty\": 200.0,\n    \"product_unit\": \"GMS\",\n    \"product_code\": \"0000000000000\",\n    \"product_rate_per_unit\": 6.5,\n    \"product_ccy\": \"AED\",\n    \"product_is_extra\": false,\n    \"product_type\": \"GRY\",\n    \"created_by\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/products/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						},
						"description": "This API will create a new product and tag it to the user who is generated the request. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_name\": \"Potato Papad - Spicy\",\n    \"product_desc\": \"Orange Potato Papad\",\n    \"product_qty\": 200.0,\n    \"product_unit\": \"GMS\",\n    \"product_code\": \"0000000000000\",\n    \"product_rate_per_unit\": 6.5,\n    \"product_ccy\": \"AED\",\n    \"product_is_extra\": false,\n    \"product_type\": \"GRY\",\n    \"date_added\": \"2020-12-22T12:45:05.671857+04:00\",\n    \"created_by\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/products/101/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"101",
								""
							]
						},
						"description": "This API will update the details of the product pointed by the ID in the URL and if it is created by the user who is trying to update it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/products/348/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"348",
								""
							]
						},
						"description": "This API will delete the product pointed by the ID in the URL and if it is created by the user who is trying to delete it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "List All Transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/transactions/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								""
							]
						},
						"description": "This API will list all the available products created by the user. The API will also validate the access token provided in the authorization header and then provide the details related to the user who has requested the details."
					},
					"response": []
				},
				{
					"name": "Transaction Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/transactions/101/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"101",
								""
							]
						},
						"description": "This API will provide the details of the transaction pointed by the ID in the URL and if it is created by the user who is requesting it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"txn_dop\": \"2020-12-01\",\n    \"txn_qty\": 18.0,\n    \"txn_unit\": \"GMS\",\n    \"txn_amount\": 29.71,\n    \"txn_ccy\": \"AED\",\n    \"txn_remarks\": \"same\",\n    \"store\": 1,\n    \"product\": 42,\n    \"created_by\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/transactions/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								""
							]
						},
						"description": "This API will create a new transaction and tag it to the user who is generated the request. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Update Transactions",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"txn_dop\": \"2020-12-01\",\n    \"txn_qty\": 18.0,\n    \"txn_unit\": \"GMS\",\n    \"txn_amount\": 29.71,\n    \"txn_ccy\": \"AED\",\n    \"txn_remarks\": \"same\",\n    \"created_by\": 1,\n    \"store\": 1,\n    \"product\": 42\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{base_url}}/api/v1/transactions/101/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"101",
								""
							]
						},
						"description": "This API will update the details of the transaction pointed by the ID in the URL and if it is created by the user who is trying to update it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				},
				{
					"name": "Delete Transaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{base_url}}/api/v1/transactions/526/",
							"protocol": "https",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"526",
								""
							]
						},
						"description": "This API will delete the transaction pointed by the ID in the URL and if it is created by the user who is trying to delete it. The API will also validate the access token provided in the authorization header."
					},
					"response": []
				}
			],
			"description": "This section covers all the core functionalities of the app. The APIs in this section are related to performing CRUD operations on Stores, Products and Transactions."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}